
; 
; Common init file for gEDA
;

;
; Start of path related keywords
;

; component-library string
; Specify where components exist.
; The string after this keyword should be a valid directory name.
; You should have read access to this directory and all the files inside
; the directory.
; The order of the component-library keywords determines the order they
; are displayed, but they are searched *backwards*, ie last one in this list
; is searched *first*.
; All environment variables *MUST* be in the form ${variable_name}
;
(component-library "@symdir@/local")
(component-library "@symdir@/74")
(component-library "@symdir@/4000")
(component-library "@symdir@/IEC417")
(component-library "@symdir@/analog")
(component-library "@symdir@/linear")
(component-library "@symdir@/altera")
(component-library "@symdir@/lattice")
(component-library "@symdir@/xilinx")
(component-library "@symdir@/idt")
(component-library "@symdir@/misc")
(component-library "@symdir@/io")
(component-library "@symdir@/titleblock")
(component-library "@symdir@/memory")
(component-library "@symdir@/micro")
(component-library "@symdir@/maxim")
(component-library "@symdir@/national")
(component-library "@symdir@/radio")
(component-library "@symdir@/tube")
(component-library "@symdir@/connector")
(component-library "@symdir@/switch")
(component-library "@symdir@/verilog")
(component-library "@symdir@/spice")
(component-library "@symdir@/rf")
(component-library "@symdir@/bus")
(component-library "@symdir@/pla")
(component-library "@symdir@/ecl")
(component-library "@symdir@/dec")
(component-library "@symdir@/supervisor")

; component-library-search atring
;
; Specifies the directory where other component libraries can be found
; The string after this keyword should be a valid directory name.
; You should have read access to this directory and all the files inside
; the directory.
; The order of the component libraries found within the specified directory
; is in inode order.  The libraries found using this keyword will be searched
; *before* the component libraries specified above.
; All environment variables *MUST* be in the form ${variable_name}
;
(component-library-search "@symdir@")

; source-library string
; Specify where source entities exist.
; The string after this keyword should be a valid directory name.
; You should have read access to this directory and all the files inside
; the directory.
; The order of the source-library keywords determines the order they
; are displayed, but they are searched *backwards*, ie last one in this list
; is searched *first*.
; All environment variables *MUST* be in the form ${variable_name}
;
(source-library "@symdir@/74")
(source-library "@symdir@/4000")
(source-library "@symdir@/analog")
(source-library "@symdir@/altera")
(source-library "@symdir@/lattice")
(source-library "@symdir@/xilinx")
(source-library "@symdir@/idt")
(source-library "@symdir@/local")
(source-library "@symdir@/memory")
(source-library "@symdir@/micro")
(source-library "@symdir@/linear")
(source-library "@symdir@/maxim")
(source-library "@symdir@/national")
(source-library "@symdir@/misc")
(source-library "@symdir@/radio")
(source-library "@symdir@/tube")
(source-library "@symdir@/connector")
(source-library "@symdir@/switch")
(source-library "@symdir@/verilog")
(source-library "@symdir@/rf")
(source-library "@symdir@/pla")
(source-library "@symdir@/ecl")
(source-library "@symdir@/dec")
(source-library "@symdir@/supervisor")
(source-library "@symdir@/bus")

; source-library-search atring
;
; Specifies the directory where other source libraries can be found
; The string after this keyword should be a valid directory name.
; You should have read access to this directory and all the files inside
; the directory.
; The order of the source libraries found within the specified directory
; is in inode order.  The libraries found using this keyword will be searched
; *before* the source libraries specified above.
; All environment variables *MUST* be in the form ${variable_name}
;
(source-library-search "@symdir@")

; font-directory string
; Specifies where the vector font definitions are stored.
; You should have read access to this directory and all the files inside
; the directory.
; All environment variables *MUST* be in the form ${variable_name}
;
(font-directory "@symdir@/font")


; scheme-directory string
; Specifies where the supporting scheme lives
; You should have read access to this directory and all the files inside
; the directory.
; All environment variables *MUST* be in the form ${variable_name}
;
(scheme-directory "@expandgedadatadir@/scheme")

;
; End of path related keywords
;

