dnl Process this file with autoconf to produce a configure script.
AC_INIT(src/gschem.c)

dnl Initialize automake stuff
PACKAGE=gEDA

# new way of doing version
VERSION=20001006

echo Configuring gschem version $VERSION

dnl --disable-strokes : turn off stroke support
AC_ARG_ENABLE(strokes,
    [  --disable-strokes       Disable stroke support (don't use LibStroke at all)],
    [
	no_strokes=yes
    ])

dnl --disable-gdgeda : turn off libgdgeda support
AC_ARG_ENABLE(gdgeda,
    [  --disable-gdgeda        Disable libgdgeda support (don't use libgdgeda at all)],
    [
	no_gdgeda=yes
    ])

dnl --enable-debug : turn on debugging support (normally off)
AC_ARG_ENABLE(debug,
    [  --enable-debug          Enable debugging support],
    [
        debug=yes
    ])

dnl Change default location of gtk-config
AC_ARG_WITH(gtk-config, [  --with-gtk-config=path  Change where gtk-config is located], [opt_gtkconfig=$withval])

dnl Change default location for rc files
AC_ARG_WITH(rcdir, [  --with-rcdir=path       Change where the system-*rc files are installed], [opt_rcdir=$withval])

dnl Initialize automake stuff
dnl AM_INIT_AUTOMAKE($PACKAGE, $GEDA_VER_MAJOR.$GEDA_VER_MINOR.$GEDA_VER_MICRO, no-define)
AM_INIT_AUTOMAKE($PACKAGE, $VERSION, no-define)

dnl Create a configuration header
AM_CONFIG_HEADER(config.h)

dnl Build time sanity check...
AM_SANITY_CHECK

dnl Initialize libtool libtool isn't needed for gschem
AM_PROG_LIBTOOL

dnl Check to see if we are building in the cygnus win32 environment
AC_CYGWIN

dnl Initialize maintainer mode
AM_MAINTAINER_MODE

dnl Checks for programs.
AC_PROG_CC
dnl AC_PROG_LEX
dnl AC_DECL_YYTEXT
AC_PROG_MAKE_SET

dnl Guile stuff
GUILE_FLAGS

dnl Check if scm_run_hook are defined 
AC_CHECK_LIB(guile, scm_run_hook,,
 	AC_MSG_ERROR(**Upgrade Guile**  At least version >= 1.3.2),
	$GUILE_LDFLAGS)

dnl Restore LIBS. Apperantly AC_CHECK_LIB destroys it.
LIBS="$ac_save_LIBS"

dnl Check if scm_hook_empty_p are defined 
AC_CHECK_LIB(guile, scm_hook_empty_p,,
 	AC_MSG_ERROR(**Upgrade Guile**  At least version >= 1.3.2),
	$GUILE_LDFLAGS)

dnl Restore LIBS. Apperantly AC_CHECK_LIB destroys it.
LIBS="$ac_save_LIBS"

saved_cflags="$CFLAGS"
saved_ldflags="$LDFLAGS"

dnl Checks for header files.
AC_PATH_X
AC_PATH_XTRA

CFLAGS="$X_CFLAGS $CFLAGS"
LDFLAGS="$X_LDFLAGS $X_LIBS $LDFLAGS"
X_EXTRA_LIBS="$X_EXTRA_LIBS -lX11 -lm"

dnl Checks for X libraries.
AC_CHECK_LIB(X11, XOpenDisplay, X_LIBS="-lX11", X_LIBS=no, $X_EXTRA_LIBS)
AC_CHECK_LIB(Xext, XShmAttach, X_LIBS="-lXext $X_LIBS", X_EXT=no, $X_EXTRA_LIBS)
dnl AC_CHECK_LIB(Xext, XShmAttach, X_LIBS="-lXext $X_LIBS", XEXT=no, $X_EXTRA_LIBS)

if test "$CYGWIN"x = x; then
        if test "$X_LIBS" = no; then
          AC_MSG_ERROR(Cannot find -lX11 library)
        fi
else
        echo X11 not required for CYGWIN port
fi

dnl Checking for rint in math library
AC_CHECK_LIB(m, rint, AC_DEFINE(HAS_RINT), no_RINT="yes")

dnl Checking for dynamic lib
AC_CHECK_LIB(dl, dlopen, DL_LIB="-ldl", DL_LIB="")

if eval "test x$opt_gtkconfig != x" ; then

	if test ! -r "$opt_gtkconfig"; then

		AC_MSG_ERROR(Cannot find $opt_gtkconfig -- be sure that this pathname is correct)

	else
		GTK_CONFIG=$opt_gtkconfig
	fi
else
        AM_PATH_GTK(1.2.3,,AC_MSG_ERROR([*** GTK+ >= 1.2.3 not installed - please install first ***]))
fi

if test $GTK_CONFIG = "no"; then
	AC_MSG_ERROR(Cannot find gtk-config -- be sure that gtk >= 0.99.7 is installed)
fi

        gtk_ldflags="`$GTK_CONFIG --libs`"
        gtk_cflags="`$GTK_CONFIG --cflags`"

LDFLAGS="$saved_ldflags $LDEXTRA"
CFLAGS="$saved_cflags $CFEXTRA"

# search for libgdgeda-config
AC_PATH_PROG(LIBGDGEDACONFIG, libgdgeda-config, no, ${PATH})

if test $LIBGDGEDACONFIG = "no"; then
         libgdgeda_ldflags=""
         libgdgeda_cflags=""
else
         libgdgeda_ldflags=`$LIBGDGEDACONFIG --libs`
         libgdgeda_cflags=`$LIBGDGEDACONFIG --cflags`
         GD_EXTRA="$libgdgeda_cflags $libgdgeda_ldflags -lm"
fi

AC_CHECK_LIB(gdgeda, gdImageColorAllocate, GDGEDA_LIB="-lgdgeda", GDGEDA_LIB=no, $GD_EXTRA)



if test $GDGEDA_LIB = no; then
        GDGEDA_LIB=""
else
        if test "$no_gdgeda" = "yes"; then
                echo found libgdgeda, but disabling gdgeda
                GDGEDA_LIB=""
         	libgdgeda_ldflags=""
         	libgdgeda_cflags=""
        else
                AC_CHECK_LIB(z, zlibVersion, Z_LIB="-lz", Z_LIB=no)
                if test $Z_LIB = no; then
                        AC_MSG_ERROR(Cannot find libz (zlib), be sure to install zlib; it is required for libgdgeda)
                fi

		PNG_EXTRA="-lz -lm"
                AC_CHECK_LIB(png, png_read_init, PNG_LIB="-lpng", PNG_LIB=no, $PNG_EXTRA)
                if test $PNG_LIB = no; then
                        AC_MSG_ERROR(Cannot find libpng, be sure to install png; it is required for libgdgeda)
                fi


                AC_DEFINE(HAS_LIBZ)
                AC_DEFINE(HAS_LIBPNG)
                AC_DEFINE(HAS_LIBGDGEDA)
        fi
fi

# search for gtkextra-config
AC_PATH_PROG(GTKEXTRACONFIG, gtkextra-config, no, ${PATH})

if test $GTKEXTRACONFIG = "no"; then
	gtkextra_ldflags=""
	gtkextra_cflags=""
else
	gtkextra_ldflags=`$GTKEXTRACONFIG --libs`
	gtkextra_cflags=`$GTKEXTRACONFIG --cflags`
	GTK_EXTRA="$gtk_cflags $gtkextra_cflags $gtkextra_ldflags $gtk_ldflags -lm"
	AC_CHECK_LIB(gtkextra, gtk_sheet_new, GTKEXTRA_LIB="-lgtkextra", GTKEXTRA_LIB=no, $GTK_EXTRA)
	if test $GTKEXTRA_LIB = "no"; then
		AC_MSG_ERROR(gtkextra library improperly installed)
	else	
		AC_DEFINE(HAS_LIBGTKEXTRA)
	fi
fi

# search for libgeda-config
AC_PATH_PROG(LIBGEDACONFIG, libgeda-config, no, ${PATH})

if test $LIBGEDACONFIG = "no"; then
	AC_MSG_ERROR(Cannot find libgeda-config -- be sure that libgeda is installed)
fi

# search for gesym-config
AC_PATH_PROG(GESYMCONFIG, gesym-config, no, ${PATH})

if test $GESYMCONFIG = "no"; then
   	  AC_MSG_ERROR(Cannot find gesym-config -- be sure that the symbols are installed)
	fi

# here is where the final X ld/c flags get set
LDEXTRA=
CFEXTRA=
GTK=
GDK=
GLIB=
X_LDFLAGS="`$LIBGEDACONFIG --libs` $libgdgeda_ldflags $gtkextra_ldflags $gtk_ldflags"
X_CFLAGS="$gtk_cflags $libgdgeda_cflags $gtkextra_cflags `$LIBGEDACONFIG --cflags`"
gtkversion=`$GTK_CONFIG --version | cut -d. -f1,2`

AC_DEFINE_UNQUOTED(GTKVERSION, "$gtkversion")

dnl old way of doing this, see if new way works 
dnl CFLAGS="$CFLAGS $CFEXTRA `$GTK_CONFIG --cflags`"

CFLAGS="`$GTK_CONFIG --cflags` $CFLAGS $CFEXTRA"
LDFLAGS="$LDEXTRA `$GTK_CONFIG --libs` -lgtk -lgdk -lglib $LDFLAGS -lm"

AC_MSG_CHECKING([for the rest of gtk])
AC_TRY_COMPILE(
[#include <gtk/gtk.h>],
[GtkArgSetFunc arg_set_func;],
gtk_found=yes,
gtk_found=no)
AC_MSG_RESULT($gtk_found)

if test $gtk_found = no; then
	AC_MSG_ERROR(Cannot include/link gtk/gdk/glib--check CFLAGS/LDFLAGS)
fi

AC_CHECK_LIB(stroke, stroke_init, STROKE_LIB="-lstroke", STROKE_LIB=no)

if test $STROKE_LIB = no; then
	STROKE_LIB=""
else 
	if test "$no_strokes" = "yes"; then
		echo found libstroke, but disabling strokes
		STROKE_LIB=""
	else 
		AC_DEFINE(HAS_LIBSTROKE)
	fi
fi


if ! test "$CYGWIN"x = x; then
	echo Including -fnative-struct in CFLAGS for CYGWIN port
	CFLAGS="$CFLAGS -fnative-struct"
        X_LDFLAGS="-lregex $X_LDFLAGS"
fi

if test "$debug" = "yes"; then
	CFLAGS="$CFLAGS -g"
fi


AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_HEADER_DIRENT
AC_CHECK_HEADERS(fcntl.h unistd.h strings.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST

dnl Checks for library functions.
AC_TYPE_SIGNAL
AC_CHECK_FUNCS(getcwd strstr vsnprintf snprintf)

AC_MSG_CHECKING([for optarg in unistd.h])
AC_TRY_COMPILE(
[#include <unistd.h>],
[ char *string = optarg; int i = optind; ],
optarg_found=yes,
optarg_found=no)
AC_MSG_RESULT($optarg_found)

if test $optarg_found = yes; then
		AC_DEFINE(OPTARG_IN_UNISTD)
fi

#
# Defs for libary symbol files
#
# Expand the prefix variable
if eval "test x$prefix = xNONE"; then
 dprefix=$ac_default_prefix
else
 dprefix=$prefix
fi

gedatopdir=`$GESYMCONFIG --toplevel`
expandgedadatadir=`echo $gedatopdir`

symdir=$gedatopdir/sym
sourcedir=$gedatopdir/source

HOME=`echo $HOME`

# new way without version
gedadatadir=$datadir/$PACKAGE

if eval "test x$opt_rcdir = x"; then

	if eval "test x$prefix = xNONE"; then
		rclocation=$expandgedadatadir
	else
		rclocation=`eval echo $gedadatadir`
	fi

	# this needs to be expanded (NO ${prefix}) since it's used in the code
	AC_DEFINE_UNQUOTED(GEDARCDIR, "$rclocation")
	expandgedarcdir=$rclocation

	# this is used in the makefiles so it can have a ${prefix} in it
	gedarcdir=$gedadatadir
else

	# path WAS specified with --with-rcdir
	gedarcdir=$opt_rcdir
	expandgedarcdir=$opt_rcdir
	AC_DEFINE_UNQUOTED(GEDARCDIR, "$opt_rcdir")

fi


AC_DEFINE_UNQUOTED(GEDADATADIR, "$gedatopdir")
AC_DEFINE_UNQUOTED(VERSION, "$VERSION")

# old way of installing data into a version dependant directory
#gedadatadir=$datadir/$PACKAGE-$VERSION
# new way without version
gedadatadir=$datadir/$PACKAGE

AC_SUBST(gedadatadir)
AC_SUBST(gedarcdir)
AC_SUBST(expandgedadatadir)
AC_SUBST(expandgedarcdir)
AC_SUBST(symdir)
AC_SUBST(sourcedir)

AC_SUBST(HOME)
AC_SUBST(VERSION)
AC_SUBST(GTKVERSION)

AC_SUBST(X_CFLAGS)
AC_SUBST(X_LDFLAGS)
AC_SUBST(X_LIBS)
AC_SUBST(STROKE_LIB)
dnl AC_SUBST(TCL_LIB)
AC_SUBST(GUILE_LIB)
AC_SUBST(GUILE_INCLUDE)
AC_SUBST(DL_LIB)
AC_SUBST(GTK)
AC_SUBST(GDK)
AC_SUBST(GLIB)

AC_OUTPUT( 	Makefile \
		src/Makefile \
		include/Makefile \
		scheme/Makefile \
		examples/Makefile \
		lib/Makefile \
		lib/system-gschemrc )

