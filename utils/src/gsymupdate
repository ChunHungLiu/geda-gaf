#!/usr/bin/perl

# gEDA - GPL Electronic Design Automation
# gsymupdate - gEDA Symbol Update 
# Copyright (C) 2002 Ales V. Hvezda
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111 USA
#

#
# This program takes a symbol filename on the command line and outputs an 
# update symbol to stdout.  
#
# This program does the following modifications to a symbol
#
#    - Removes all pin#=# attributes, converting them into pinseq= and 
#      pinnumber= attributes
#    - Removes all slot#=# attributes, converting them into slotdef= attributes
#
# Right now this program should only be run against symbols which are 
# either version 20020527 or earlier.
#

foreach $filename (@ARGV) {

    open (FILE, $filename) || die "Cannot open input file: $filename $!\n";

    while (<FILE>) {

        # handle text objects
        if (/^T/) { 

            $textcmd = $_;

            $textline = <FILE>;

            # are we dealing with an attribute?
            if ($textline =~ /=/) {  

                # Break the attribute up into name=value
                @attrib = split(/=/,$textline);
                $name=@attrib[0];
                $value=@attrib[1];

                if ($name =~ /^slot[0-9]+/) {

                    # It is a slot#=# attribute
                    @slotnum = split(/slot/,$name);
                    print $textcmd;
                    print "slotdef=@slotnum[1]:$value";

                } elsif ($name =~ /^pin[0-9]+/) {

                    # It is a pin#=# attribute
                    print $textcmd;
                    print "pinnumber=$value";

                    @pinseq = split(/pin/,$name);
                    # need to post process textcmd here to hide text
                    $newtextcmd = $textcmd;
                    chop($newtextcmd);
                    @textsplit = split(" ",$textcmd);
                    
                    # Hide this new attribute by changing the 5th value to 0
                    # Also show both the name and value for the pinseq attrib
                    print "@textsplit[0] @textsplit[1] @textsplit[2] @textsplit[3] @textsplit[4] 0 0 @textsplit[7] @textsplit[8]\n";
                    print "pinseq=@pinseq[1]\n";


                    } else {
                        # none of the above, just pass it through
                        print $textcmd;
                        print $textline;
                    }


            } else {
                # not an attribute
                print $textcmd;
                print $textline;
            }

        } elsif (/^P /) {
            
            # handle pins
            print;

        } else {
            # It is not a text, version, or pin object, so pass it through
            print;
        }

    }

}


