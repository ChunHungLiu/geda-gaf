
; 
; Common init file for gEDA
;

;
; Start of path related keywords
;

; component-library string
; Specify where components exist.
; The string after this keyword should be a valid directory name.
; You should have read access to this directory and all the files inside
; the directory.
; The order of the component-library keywords determines the order they
; are displayed, but they are searched *backwards*, ie last one in this list
; is searched *first*.
; All environment variables *MUST* be in the form ${variable_name}
;
(component-library "${GEDADATA}/sym/local")
(component-library "${GEDADATA}/sym/74")
(component-library "${GEDADATA}/sym/4000")
(component-library "${GEDADATA}/sym/IEC417")
(component-library "${GEDADATA}/sym/analog")
(component-library "${GEDADATA}/sym/linear")
(component-library "${GEDADATA}/sym/altera")
(component-library "${GEDADATA}/sym/lattice")
(component-library "${GEDADATA}/sym/xilinx")
(component-library "${GEDADATA}/sym/idt")
(component-library "${GEDADATA}/sym/misc")
(component-library "${GEDADATA}/sym/power")
(component-library "${GEDADATA}/sym/transistor")
(component-library "${GEDADATA}/sym/io")
(component-library "${GEDADATA}/sym/titleblock")
(component-library "${GEDADATA}/sym/memory")
(component-library "${GEDADATA}/sym/micro")
(component-library "${GEDADATA}/sym/maxim")
(component-library "${GEDADATA}/sym/national")
(component-library "${GEDADATA}/sym/radio")
(component-library "${GEDADATA}/sym/tube")
(component-library "${GEDADATA}/sym/connector")
(component-library "${GEDADATA}/sym/switch")
(component-library "${GEDADATA}/sym/verilog")
(component-library "${GEDADATA}/sym/vhdl")
(component-library "${GEDADATA}/sym/spice")
(component-library "${GEDADATA}/sym/rf")
(component-library "${GEDADATA}/sym/bus")
(component-library "${GEDADATA}/sym/pla")
(component-library "${GEDADATA}/sym/ecl")
(component-library "${GEDADATA}/sym/dec")
(component-library "${GEDADATA}/sym/supervisor")
(component-library "${GEDADATA}/sym/opto")
(component-library "${GEDADATA}/sym/diode")
(component-library "${GEDADATA}/sym/relay")

; component-library-search atring
;
; Specifies the directory where other component libraries can be found
; The string after this keyword should be a valid directory name.
; You should have read access to this directory and all the files inside
; the directory.
; The order of the component libraries found within the specified directory
; is in inode order.  The libraries found using this keyword will be searched
; *before* the component libraries specified above.
; All environment variables *MUST* be in the form ${variable_name}
;
(component-library-search "${GEDADATA}/sym")

; source-library string
; Specify where source entities exist.
; The string after this keyword should be a valid directory name.
; You should have read access to this directory and all the files inside
; the directory.
; The order of the source-library keywords determines the order they
; are displayed, but they are searched *backwards*, ie last one in this list
; is searched *first*.
; All environment variables *MUST* be in the form ${variable_name}
;
(source-library "${GEDADATA}/sym/74")
(source-library "${GEDADATA}/sym/4000")
(source-library "${GEDADATA}/sym/analog")
(source-library "${GEDADATA}/sym/altera")
(source-library "${GEDADATA}/sym/lattice")
(source-library "${GEDADATA}/sym/xilinx")
(source-library "${GEDADATA}/sym/idt")
(source-library "${GEDADATA}/sym/local")
(source-library "${GEDADATA}/sym/memory")
(source-library "${GEDADATA}/sym/micro")
(source-library "${GEDADATA}/sym/linear")
(source-library "${GEDADATA}/sym/maxim")
(source-library "${GEDADATA}/sym/national")
(source-library "${GEDADATA}/sym/misc")
(source-library "${GEDADATA}/sym/power")
(source-library "${GEDADATA}/sym/transistor")
(source-library "${GEDADATA}/sym/radio")
(source-library "${GEDADATA}/sym/tube")
(source-library "${GEDADATA}/sym/connector")
(source-library "${GEDADATA}/sym/switch")
(source-library "${GEDADATA}/sym/verilog")
(source-library "${GEDADATA}/sym/vhdl")
(source-library "${GEDADATA}/sym/rf")
(source-library "${GEDADATA}/sym/pla")
(source-library "${GEDADATA}/sym/ecl")
(source-library "${GEDADATA}/sym/dec")
(source-library "${GEDADATA}/sym/supervisor")
(source-library "${GEDADATA}/sym/bus")
(source-library "${GEDADATA}/sym/opto")
(source-library "${GEDADATA}/sym/diode")
(source-library "${GEDADATA}/sym/relay")

; source-library-search atring
;
; Specifies the directory where other source libraries can be found
; The string after this keyword should be a valid directory name.
; You should have read access to this directory and all the files inside
; the directory.
; The order of the source libraries found within the specified directory
; is in inode order.  The libraries found using this keyword will be searched
; *before* the source libraries specified above.
; All environment variables *MUST* be in the form ${variable_name}
;
(source-library-search "${GEDADATA}/sym")

; font-directory string
; Specifies where the vector font definitions are stored.
; You should have read access to this directory and all the files inside
; the directory.
; All environment variables *MUST* be in the form ${variable_name}
;
(font-directory "${GEDADATA}/sym/font")


; scheme-directory string
; Specifies where the supporting scheme lives
; You should have read access to this directory and all the files inside
; the directory.
; All environment variables *MUST* be in the form ${variable_name}
;
(scheme-directory "${GEDADATA}/scheme")

;
; End of path related keywords
;

