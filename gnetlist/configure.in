dnl Process this file with autoconf to produce a configure script.
AC_INIT
AC_CONFIG_SRCDIR([src/gnetlist.c])

dnl Initialize automake stuff
PACKAGE=geda-gnetlist

DATADIR=gEDA

# new way of doing version
VERSION=20021103

echo Configuring gnetlist version $VERSION

dnl --enable-debug : turn on debugging support (normally off)
AC_ARG_ENABLE(debug,
    [  --enable-debug          Enable debugging support],
    [
        debug=yes
    ])

dnl --disable-gdgeda : turn off libgdgeda support
AC_ARG_ENABLE(gdgeda,
    [  --disable-gdgeda        Disable libgdgeda support (don't use libgdgeda at all)],
    [
        if test $enableval = "no"; then
                no_gdgeda=yes
        fi
    ])

dnl Change default location of gtk-config
AC_ARG_WITH(gtk-config, [  --with-gtk-config=path  Change where gtk-config is located], [opt_gtkconfig=$withval])

dnl Change default location of glib-config
AC_ARG_WITH(glib-config, [  --with-glib-config=path  Change where glib-config is located], [opt_glibconfig=$withval])

dnl Change default location for rc files
AC_ARG_WITH(rcdir, [  --with-rcdir=path       Change where the system-*rc files are installed], [opt_rcdir=$withval])

dnl Initialize automake stuff
dnl AM_INIT_AUTOMAKE($PACKAGE, $GEDA_VER_MAJOR.$GEDA_VER_MINOR.$GEDA_VER_MICRO, no-define)
AM_INIT_AUTOMAKE($PACKAGE, $VERSION, no-define)

AC_CANONICAL_HOST()

dnl Create a configuration header
AM_CONFIG_HEADER(config.h)

dnl Build time sanity check...
AM_SANITY_CHECK

dnl Initialize maintainer mode
AM_MAINTAINER_MODE

dnl Checks for programs.
AC_PROG_CC
dnl AC_PROG_LEX
dnl AC_PROG_LEX()
AC_PROG_MAKE_SET

case $host_os in
  *cygwin*  ) AC_MSG_ERROR(Building gEDA/gaf under cygwin is not supported) ;;
  *mingw32* ) echo "Configuring for mingw"; MINGW32=yes ;;
esac

dnl Guile stuff
GUILE_FLAGS

saved_cflags="$CFLAGS"
saved_ldflags="$LDFLAGS"

dnl Checks for header files.
AC_PATH_X
AC_PATH_XTRA

CFLAGS="$X_CFLAGS $CFLAGS"
LDFLAGS="$X_LDFLAGS $X_LIBS $LDFLAGS"
X_EXTRA_LIBS="$X_EXTRA_LIBS -lX11 -lm"

dnl Checks for X libraries.
AC_CHECK_LIB(X11, XOpenDisplay, X_LIBS="-lX11", X_LIBS=no, $X_EXTRA_LIBS)
AC_CHECK_LIB(Xext, XShmAttach, X_LIBS="-lXext $X_LIBS", X_EXT=no, $X_EXTRA_LIBS)
dnl AC_CHECK_LIB(Xext, XShmAttach, X_LIBS="-lXext $X_LIBS", XEXT=no, $X_EXTRA_LIBS)

if test "$MINGW32" = "no" -o "$MINGW32"x = x; then
	if test "$X_LIBS" = no; then
          AC_MSG_ERROR(Cannot find -lX11 library)
        fi
else 
	echo X11 not require for MINGW32 port
fi

dnl Checking for rint in math library
AC_CHECK_LIB(m, rint, AC_DEFINE(HAS_RINT), no_RINT="yes")

dnl Checking for dynamic lib
AC_CHECK_LIB(dl, dlopen, DL_LIB="-ldl", DL_LIB="")

if eval "test x$opt_gtkconfig != x" ; then

	if test ! -r "$opt_gtkconfig"; then

		AC_MSG_ERROR(Cannot find $opt_gtkconfig -- be sure that this pathname is correct)

	else
		GTK_CONFIG=$opt_gtkconfig
	fi
else
	AM_PATH_GTK(1.2.3,,AC_MSG_ERROR([*** GTK+ >= 1.2.3 not installed - please install first ***]))
fi


if test $GTK_CONFIG = "no"; then
   	  AC_MSG_ERROR(Cannot find gtk-config -- be sure that gtk >= 1.2.3 is installed)
fi

# search for glib-config
if eval "test x$opt_glibconfig != x" ; then

	if test ! -r "$opt_glibconfig"; then

		AC_MSG_ERROR(Cannot find $opt_glibconfig -- be sure that this pathname is correct)

	else
		GLIB_CONFIG=$opt_glibconfig
	fi
else
	AM_PATH_GLIB(1.2.3,,AC_MSG_ERROR([*** GLIB >= 1.2.3 not installed - please install first ***]))
fi


if test $GLIB_CONFIG = "no"; then
   	  AC_MSG_ERROR(Cannot find glib-config -- be sure that gtk >= 1.2.3 is installed)
fi

# search for libgeda-config
AC_PATH_PROG(LIBGEDACONFIG, libgeda-config, no, ${PATH})

if test $LIBGEDACONFIG = "no"; then
	AC_MSG_ERROR(Cannot find libgeda-config -- be sure that libgeda is installed)
fi

libgeda_version=`$LIBGEDACONFIG --version`
if test $libgeda_version != $VERSION; then
        AC_MSG_ERROR(Found a different version of libgeda-config: $LIBGEDACONFIG -- Make sure your PATH variable is correct)
fi

# search for gesym-config
AC_PATH_PROG(GESYMCONFIG, gesym-config, no, ${PATH})

if test $GESYMCONFIG = "no"; then
   	  AC_MSG_ERROR(Cannot find gesym-config -- be sure that the symbols are installed)
fi

gesym_version=`$GESYMCONFIG --version`
if test $gesym_version != $VERSION; then
        AC_MSG_ERROR(Found a different version of gesym-config: $GESYMCONFIG -- Make sure your PATH variable is correct)
fi


# search for libgdgeda-config
AC_PATH_PROG(LIBGDGEDACONFIG, libgdgeda-config, no, ${PATH})

if test $LIBGDGEDACONFIG = "no" -o no_gdgeda = yes; then
	 GDGEDA_LIB=""
         libgdgeda_ldflags=""
         libgdgeda_cflags=""
else
         libgdgeda_ldflags=`$LIBGDGEDACONFIG --libs`
         libgdgeda_cflags=`$LIBGDGEDACONFIG --cflags`
         GD_EXTRA="$libgdgeda_cflags $libgdgeda_ldflags -lm"
         X_CFLAGS="$libgdgeda_cflags"

         AC_CHECK_LIB(z, uncompress, Z_LIB="-lz", Z_LIB=no)
         if test $Z_LIB = no; then
	 	AC_MSG_ERROR(Cannot find libz (zlib), be sure to install zlib; it is required for libgdgeda)
	 else

		PNG_EXTRA="-lz -lm"
                AC_CHECK_LIB(png, png_read_png, PNG_LIB="-lpng", PNG_LIB=no, $PNG_EXTRA)

                if test $PNG_LIB = no; then
                        AC_MSG_ERROR(Cannot find libpng, be sure to install png; it is required for libgdgeda)
                else

			AC_CHECK_LIB(gdgeda, gdImageColorAllocate, GDGEDA_LIB="-lgdgeda", GDGEDA_LIB=no, $GD_EXTRA)

			if test $GDGEDA_LIB = no; then
			        GDGEDA_LIB=""
		         	libgdgeda_ldflags=""
         			libgdgeda_cflags=""
			else
		                AC_DEFINE(HAS_LIBZ)
                		AC_DEFINE(HAS_LIBPNG)
		                AC_DEFINE(HAS_LIBGDGEDA)
		        fi
		fi
	fi
fi

# here is where the final X ld/c flags get set
LDEXTRA=
CFEXTRA=
GTK=
GDK=
GLIB=
X_LDFLAGS="`$LIBGEDACONFIG --libs` $libgdgeda_ldflags `$GLIB_CONFIG --libs`"
X_CFLAGS="`$GTK_CONFIG --cflags` $libgdgeda_cflags `$LIBGEDACONFIG --cflags`"
gtkversion=`$GTK_CONFIG --version | cut -d. -f1,2`

AC_DEFINE_UNQUOTED(GTKVERSION, "$gtkversion")

dnl old way of doing this, see if new way works 
dnl CFLAGS="$CFLAGS $CFEXTRA `$GTK_CONFIG --cflags`"

CFLAGS="`$GTK_CONFIG --cflags` $CFLAGS $CFEXTRA"
LDFLAGS="$LDEXTRA `$GTK_CONFIG --libs` $LDFLAGS"


AC_MSG_CHECKING([for the rest of gtk])
AC_TRY_COMPILE(
[#include <gtk/gtk.h>],
[GtkArgSetFunc arg_set_func;],
gtk_found=yes,
gtk_found=no)
AC_MSG_RESULT($gtk_found)

if test $gtk_found = no; then
	AC_MSG_ERROR(Cannot include/link gtk/gdk/glib--check CFLAGS/LDFLAGS)
fi

LDFLAGS="$saved_ldflags $LDEXTRA"
CFLAGS="$saved_cflags $CFEXTRA"

if ! test "$MINGW32" = "no" -o "$MINGW32"x = x; then
        echo Including -mms-bitfields in CFLAGS for MINGW32 port
        echo Including -lregex in LDFLAGS in MINGW32 port
        CFLAGS="$CFLAGS -mms-bitfields"
	X_LDFLAGS="-lregex -liberty $X_LDFLAGS"
	PATHSEP=\\\\
	OTHERPATHSEP=/
else 
	PATHSEP=/
	OTHERPATHSEP=\\\\
fi

if test "$debug" = "yes"; then
        CFLAGS="$CFLAGS -g"
fi

AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_HEADER_DIRENT
AC_CHECK_HEADERS(unistd.h string.h stdlib.h \
                 stdarg.h assert.h fcntl.h errno.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST

dnl Checks for library functions.
AC_TYPE_SIGNAL
AC_CHECK_FUNCS(getcwd strstr vsnprintf snprintf)

AC_MSG_CHECKING([for optarg in unistd.h])
AC_TRY_COMPILE(
[#include <unistd.h>],
[ char *string = optarg; int i = optind; ],
optarg_found=yes,
optarg_found=no)
AC_MSG_RESULT($optarg_found)

if test $optarg_found = yes; then
		AC_DEFINE(OPTARG_IN_UNISTD)
fi

gedatopdir=`$GESYMCONFIG --toplevel`
HOME=`echo $HOME`

if eval "test x$opt_rcdir = x"; then
        # path was not specified with --with-rcdir
	AC_DEFINE_UNQUOTED(GEDARCDIR, "none")
        GEDARCDIR="$gedatopdir"
else
	# path WAS specified with --with-rcdir
	AC_DEFINE_UNQUOTED(GEDARCDIR, "$opt_rcdir")
        GEDARCDIR="$opt_rcdir"
fi

AC_DEFINE_UNQUOTED(GEDADATADIR, "$gedatopdir")
GEDADATADIR=$gedatopdir

AC_DEFINE_UNQUOTED(VERSION, "$VERSION")

AC_SUBST(HOME)
AC_SUBST(VERSION)
AC_SUBST(GTKVERSION)
AC_SUBST(GEDARCDIR)
AC_SUBST(GEDADATADIR)
AC_SUBST(PATHSEP)
AC_SUBST(OTHERPATHSEP)

AC_SUBST(X_CFLAGS)
AC_SUBST(X_LDFLAGS)
AC_SUBST(X_LIBS)
AC_SUBST(DL_LIB)
AC_SUBST(GTK)
AC_SUBST(GDK)
AC_SUBST(GLIB)

AC_CONFIG_FILES([Makefile \
		src/Makefile \
		include/Makefile \
		scheme/Makefile \
		examples/Makefile \
		tests/Makefile \
		tests/hierarchy/Makefile \
		docs/Makefile \
		docs/vams/Makefile \
		examples/vams/Makefile \
		examples/vams/sch/Makefile \
		examples/vams/sym/Makefile \
		examples/vams/vhdl/Makefile \
		examples/vams/vhdl/basic-vhdl/Makefile \
		examples/vams/vhdl/new-vhdl/Makefile \
		lib/Makefile \
		utils/Makefile \
		scripts/Makefile \
		lib/system-gnetlistrc ])
AC_OUTPUT

