-- Structural VHDL generated by gnetlist
-- Context clause
library IEEE;
use IEEE.Std_Logic_1164.all;
-- Entity declaration

ENTITY top IS
    PORT (
        INPUTA : in Std_Logic;
        INPUTB : in Std_Logic;
        INPUTC : in Std_Logic;
        INPUTD : in Std_Logic;
        RIPPLE_BLANK_INn : in Std_Logic;
        LAMP_TESTn : in Std_Logic;
        OUTPUTAn : out Std_Logic;
        OUTPUTBn : out Std_Logic;
        OUTPUTCn : out Std_Logic;
        OUTPUTDn : out Std_Logic;
        OUTPUTEn : out Std_Logic;
        OUTPUTFn : out Std_Logic;
        OUTPUTGn : out Std_Logic;
        RIPPLE_BLANK_OUTn : out Std_Logic);
END ENTITY top;

-- Secondary unit
ARCHITECTURE netlist OF top IS
    SIGNAL unnamed_net32 : Std_Logic;
    SIGNAL unnamed_net31 : Std_Logic;
    SIGNAL RIPPLE_BLANK_INn : Std_Logic;
    SIGNAL INPUTD : Std_Logic;
    SIGNAL OUTPUTGn : Std_Logic;
    SIGNAL OUTPUTFn : Std_Logic;
    SIGNAL OUTPUTEn : Std_Logic;
    SIGNAL OUTPUTDn : Std_Logic;
    SIGNAL OUTPUTCn : Std_Logic;
    SIGNAL unnamed_net30 : Std_Logic;
    SIGNAL OUTPUTBn : Std_Logic;
    SIGNAL OUTPUTAn : Std_Logic;
    SIGNAL unnamed_net29 : Std_Logic;
    SIGNAL unnamed_net28 : Std_Logic;
    SIGNAL unnamed_net27 : Std_Logic;
    SIGNAL unnamed_net26 : Std_Logic;
    SIGNAL unnamed_net25 : Std_Logic;
    SIGNAL unnamed_net24 : Std_Logic;
    SIGNAL unnamed_net23 : Std_Logic;
    SIGNAL unnamed_net22 : Std_Logic;
    SIGNAL unnamed_net21 : Std_Logic;
    SIGNAL unnamed_net20 : Std_Logic;
    SIGNAL unnamed_net19 : Std_Logic;
    SIGNAL unnamed_net18 : Std_Logic;
    SIGNAL unnamed_net17 : Std_Logic;
    SIGNAL unnamed_net16 : Std_Logic;
    SIGNAL unnamed_net15 : Std_Logic;
    SIGNAL unnamed_net14 : Std_Logic;
    SIGNAL unnamed_net13 : Std_Logic;
    SIGNAL unnamed_net12 : Std_Logic;
    SIGNAL unnamed_net11 : Std_Logic;
    SIGNAL unnamed_net10 : Std_Logic;
    SIGNAL unnamed_net9 : Std_Logic;
    SIGNAL unnamed_net8 : Std_Logic;
    SIGNAL unnamed_net7 : Std_Logic;
    SIGNAL unnamed_net6 : Std_Logic;
    SIGNAL unnamed_net5 : Std_Logic;
    SIGNAL RIPPLE_BLANK_OUTn : Std_Logic;
    SIGNAL unnamed_net4 : Std_Logic;
    SIGNAL INPUTC : Std_Logic;
    SIGNAL unnamed_net3 : Std_Logic;
    SIGNAL INPUTB : Std_Logic;
    SIGNAL unnamed_net2 : Std_Logic;
    SIGNAL INPUTA : Std_Logic;
    SIGNAL LAMP_TESTn : Std_Logic;
    SIGNAL unnamed_net1 : Std_Logic;
BEGIN
-- Architecture statement part
    U38 : ENTITY nor3
    PORT MAP (
        OUT0 => unnamed_net30,
        IN0 => unnamed_net32,
        IN1 => unnamed_net31,
        IN2 => unnamed_net11);

    U37 : ENTITY and4
    PORT MAP (
        OUT0 => unnamed_net28,
        IN0 => LAMP_TESTn,
        IN1 => unnamed_net8,
        IN2 => unnamed_net3,
        IN3 => unnamed_net2);

    U36 : ENTITY and3
    PORT MAP (
        OUT0 => unnamed_net29,
        IN0 => unnamed_net6,
        IN1 => unnamed_net5,
        IN2 => unnamed_net4);

    U35 : ENTITY and3
    PORT MAP (
        OUT0 => unnamed_net26,
        IN0 => unnamed_net8,
        IN1 => unnamed_net3,
        IN2 => unnamed_net4);

    U34 : ENTITY and3
    PORT MAP (
        OUT0 => unnamed_net21,
        IN0 => unnamed_net6,
        IN1 => unnamed_net5,
        IN2 => unnamed_net4);

    U33 : ENTITY and3
    PORT MAP (
        OUT0 => unnamed_net22,
        IN0 => unnamed_net6,
        IN1 => unnamed_net2,
        IN2 => unnamed_net1);

    U32 : ENTITY and3
    PORT MAP (
        OUT0 => unnamed_net23,
        IN0 => unnamed_net3,
        IN1 => unnamed_net2,
        IN2 => unnamed_net4);

    U31 : ENTITY and3
    PORT MAP (
        OUT0 => unnamed_net19,
        IN0 => unnamed_net3,
        IN1 => unnamed_net5,
        IN2 => unnamed_net1);

    U30 : ENTITY and3
    PORT MAP (
        OUT0 => unnamed_net32,
        IN0 => unnamed_net6,
        IN1 => unnamed_net5,
        IN2 => unnamed_net1);

    U29 : ENTITY and3
    PORT MAP (
        OUT0 => unnamed_net31,
        IN0 => unnamed_net6,
        IN1 => unnamed_net2,
        IN2 => unnamed_net4);

    U28 : ENTITY and4
    PORT MAP (
        OUT0 => unnamed_net17,
        IN0 => unnamed_net8,
        IN1 => unnamed_net3,
        IN2 => unnamed_net2,
        IN3 => unnamed_net4);

    U27 : ENTITY nand6
    PORT MAP (
        OUT0 => RIPPLE_BLANK_OUTn,
        IN0 => LAMP_TESTn,
        IN1 => RIPPLE_BLANK_INn,
        IN2 => unnamed_net8,
        IN3 => unnamed_net3,
        IN4 => unnamed_net2,
        IN5 => unnamed_net1);

    U26 : ENTITY neg
    PORT MAP (
        OUT0 => unnamed_net8,
        IN0 => INPUTD);

    U40 : ENTITY neg
    PORT MAP (
        OUT0 => OUTPUTGn,
        IN0 => unnamed_net27);

    U39 : ENTITY neg
    PORT MAP (
        OUT0 => OUTPUTFn,
        IN0 => unnamed_net25);

    U25 : ENTITY neg
    PORT MAP (
        OUT0 => OUTPUTEn,
        IN0 => unnamed_net24);

    U24 : ENTITY neg
    PORT MAP (
        OUT0 => OUTPUTDn,
        IN0 => unnamed_net20);

    U23 : ENTITY neg
    PORT MAP (
        OUT0 => OUTPUTCn,
        IN0 => unnamed_net18);

    U22 : ENTITY neg
    PORT MAP (
        OUT0 => OUTPUTBn,
        IN0 => unnamed_net30);

    U21 : ENTITY neg
    PORT MAP (
        OUT0 => OUTPUTAn,
        IN0 => unnamed_net16);

    U20 : ENTITY nor2
    PORT MAP (
        OUT0 => unnamed_net27,
        IN0 => unnamed_net28,
        IN1 => unnamed_net29);

    U19 : ENTITY nor3
    PORT MAP (
        OUT0 => unnamed_net25,
        IN0 => unnamed_net26,
        IN1 => unnamed_net15,
        IN2 => unnamed_net14);

    U18 : ENTITY nor2
    PORT MAP (
        OUT0 => unnamed_net24,
        IN0 => unnamed_net13,
        IN1 => unnamed_net4);

    U17 : ENTITY nor3
    PORT MAP (
        OUT0 => unnamed_net20,
        IN0 => unnamed_net21,
        IN1 => unnamed_net22,
        IN2 => unnamed_net23);

    U16 : ENTITY nor2
    PORT MAP (
        OUT0 => unnamed_net18,
        IN0 => unnamed_net19,
        IN1 => unnamed_net12);

    U15 : ENTITY nor3
    PORT MAP (
        OUT0 => unnamed_net16,
        IN0 => unnamed_net17,
        IN1 => unnamed_net10,
        IN2 => unnamed_net9);

    U14 : ENTITY and2
    PORT MAP (
        OUT0 => unnamed_net15,
        IN0 => unnamed_net3,
        IN1 => unnamed_net5);

    U13 : ENTITY and2
    PORT MAP (
        OUT0 => unnamed_net14,
        IN0 => unnamed_net5,
        IN1 => unnamed_net4);

    U12 : ENTITY and2
    PORT MAP (
        OUT0 => unnamed_net13,
        IN0 => unnamed_net6,
        IN1 => unnamed_net2);

    U11 : ENTITY and2
    PORT MAP (
        OUT0 => unnamed_net12,
        IN0 => unnamed_net7,
        IN1 => unnamed_net6);

    U10 : ENTITY and2
    PORT MAP (
        OUT0 => unnamed_net11,
        IN0 => unnamed_net7,
        IN1 => unnamed_net5);

    U9 : ENTITY and2
    PORT MAP (
        OUT0 => unnamed_net10,
        IN0 => unnamed_net6,
        IN1 => unnamed_net1);

    U8 : ENTITY and2
    PORT MAP (
        OUT0 => unnamed_net9,
        IN0 => unnamed_net7,
        IN1 => unnamed_net5);

    U7 : ENTITY nand2
    PORT MAP (
        OUT0 => unnamed_net7,
        IN0 => RIPPLE_BLANK_OUTn,
        IN1 => unnamed_net8);

    U6 : ENTITY nand2
    PORT MAP (
        OUT0 => unnamed_net6,
        IN0 => RIPPLE_BLANK_OUTn,
        IN1 => unnamed_net3);

    U5 : ENTITY nand2
    PORT MAP (
        OUT0 => unnamed_net5,
        IN0 => RIPPLE_BLANK_OUTn,
        IN1 => unnamed_net2);

    U4 : ENTITY nand2
    PORT MAP (
        OUT0 => unnamed_net4,
        IN0 => RIPPLE_BLANK_OUTn,
        IN1 => unnamed_net1);

    U3 : ENTITY nand2
    PORT MAP (
        OUT0 => unnamed_net3,
        IN0 => LAMP_TESTn,
        IN1 => INPUTC);

    U2 : ENTITY nand2
    PORT MAP (
        OUT0 => unnamed_net2,
        IN0 => LAMP_TESTn,
        IN1 => INPUTB);

    U1 : ENTITY nand2
    PORT MAP (
        OUT0 => unnamed_net1,
        IN0 => LAMP_TESTn,
        IN1 => INPUTA);

END ARCHITECTURE netlist;
