# This is the template file for creating symbols with tragesym.py
# every line starting with '#' is a comment line.

[options]
# rotate_labels rotates the pintext of top and bottom pins
# wordswap swaps labels if the pin is on the right side an looks like this:
# "PB1 (CLK)"
wordswap=yes
rotate_labels=no
sort_labels=yes
generate_pinseq=no
sym_width=2600
pinwidthvertikal=400
pinwidthhorizontal=600

[geda_attr]
# name will be printed in the top of the symbol
# if you have a device with slots, you'll have to use slot= and slotdef=
# use comment= if there are special information you want to add
version=20030525
name=TEST1
device=devTEST1
refdes=U?
footprint=SO20
description=pin sorting test, pin sequence test
documentation=http://url_to_the_datasheet.com/datasheet.pdf
author=Werner Hoch <werner.ho(AT)gmx.de>
numslots=0
#slot=1
#slotdef=1:
#slotdef=2:
#slotdef=3:
#slotdef=4:
#comment=
#comment=
#comment=

[pins]
# tabseparated list of pin descriptions
# pinnr is the physical number of the pin
# seq is the pinseq= attribute, leave it blank if it doesn't matter
# type can be (in, out, io, oc, oe, pas, tp, tri, clk, pwr)
# style can be (line,dot,clk,dotclk,none). none if only want to add a net
# posit. can be (l,r,t,b) or empty for nets
# net specifies the name of the Vcc or GND name
# label represents the pinlabel. 
#	negation lines can be added with _Q_ 
#	if you want to add a "_" or "\" use "\_" and "\\" as escape sequences
#-----------------------------------------------------
#pinnr	seq	type	style	posit.	net	label	
#-----------------------------------------------------
1	21	io	line	l		hello
2	20	out	clk	l		_neg_
3	19	out	dot	l		_n_0_n_
4		pwr	none		GND
5	18	io	line	l		_ABC_ (DEF)
6	17	out	clk	l		xx_XX_xx
7	16	out	dot	l		_Reset_
8		pwr	none		AGND
9	15	io	line	l		A12a100xx
10	14	out	clk	l		A12a100
11	13	out	dot	l		ner
12		pwr	none		AVcc
13	12	io	line	l		A1
14	11	out	clk	l		A12
15	10	out	dot	l		A2
16		pwr	none		Vcc
17	9	in	dotclk	l		first
18	8	in	dotclk	r		n_exe_n
19	7	in	dotclk	t		this
20 	6	in	dotclk	b		other
21	5	in	dot	b		_Reset_
22	4	out	line	t		PD1 (_SS_)
23	3	io	clk	r		PD2 (_xxx_hello_sss_)
24	2	io	dot	r		PD3 (x\_no\_over)
25	1	io	clk	r		PD4 (\\_strange\\_)

