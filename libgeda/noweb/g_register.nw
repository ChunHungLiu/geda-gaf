@c -*- mode: Noweb; noweb-doc-mode: texinfo-mode; noweb-code-mode: c-mode -*-

@node File g_register.c,,,Top
@chapter File @file{g_register.c}

@section File header

<<g_register.c : *>>=
<<g_register.c : copyright and license>>

/* DO NOT read or edit this file ! Use ../noweb/g_register.nw instead */

<<g_register.c : include directives>>
<<g_register.c : g_register_libgeda_funcs()>>

@


<<g_register.c : copyright and license>>=
/* gEDA - GPL Electronic Design Automation
 * libgeda - gEDA's Library
 * Copyright (C) 1998-2004 Ales V. Hvezda
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111 USA
 */

@ 


<<g_register.c : include directives>>=
#include <config.h>

#include <stdio.h>
#include <sys/stat.h>
#ifdef HAVE_STDLIB_H
#include <stdlib.h>
#endif
#ifdef HAVE_ASSERT_H
#include <assert.h>
#endif
#ifdef HAVE_UNISTD_H
#include <unistd.h>
#endif

#include <gtk/gtk.h>
#include <guile/gh.h>

#include "defines.h"
#include "struct.h"
#include "globals.h"
#include "o_types.h"
#include "colors.h"
#include "i_vars.h"
#include "prototype.h"

@


@section Function @code{g_register_libgeda_funcs()}

@defun g_register_libgeda_funcs
@end defun

<<g_register.c : g_register_libgeda_funcs()>>=
void
g_register_libgeda_funcs(void)
{
  /* rc file */
  gh_new_procedure1_0 ("component-library", g_rc_component_library);
  gh_new_procedure1_0 ("component-library-search", g_rc_component_library_search);
  gh_new_procedure1_0 ("source-library", g_rc_source_library);
  gh_new_procedure1_0 ("source-library-search", g_rc_source_library_search);
    
  gh_new_procedure3_0 ("world-size", g_rc_world_size);

  gh_new_procedure0_0 ("reset-component-library", g_rc_reset_component_library);
  gh_new_procedure0_0 ("reset-source-library", g_rc_reset_source_library);

  gh_new_procedure1_0 ("default-series-name", g_rc_default_series_name);
  gh_new_procedure1_0 ("untitled-name", g_rc_untitled_name);
  gh_new_procedure1_0 ("scheme-directory", g_rc_scheme_directory);
  gh_new_procedure1_0 ("bitmap-directory", g_rc_bitmap_directory);
  gh_new_procedure1_0 ("font-directory", g_rc_font_directory);
  gh_new_procedure1_0 ("bus-ripper-symname", g_rc_bus_ripper_symname);
  
  return;
}


@ %def g_register_libgeda_funcs


